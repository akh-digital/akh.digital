---
const { name, class: className, size } = Astro.props;
const modules = import.meta.glob("../../public/icons/*.svg", {
	as: "raw",
	eager: true,
});
const icons = Object.entries(modules).reduce((acc, [path, value]) => {
	const filename = path.split("/").pop();
	const iconName = filename.split(".")[0];
	acc[iconName] = value;
	return acc;
}, {});

const processRegExp = (regExp, string) => {
	const match = string.match(regExp);
	return match ? match[1] : null;
};

const svgContentRegExp = /<svg[^>]*>([\s\S]*?)<\/svg>/;
const viewBoxValueRegExp = /viewBox="\d+ \d+ \d+ (\d+)"/;

const getIconContent = (iconSvg) => {
	return processRegExp(svgContentRegExp, iconSvg);
};

const getIconSize = (iconSvg) => {
	return processRegExp(viewBoxValueRegExp, iconSvg);
};

let iconSvg = icons[name] || undefined;

const icon = getIconContent(iconSvg);
const defaultSize = getIconSize(iconSvg);
---

{
	icon ? (
		<svg
			viewBox={`0 0 ${defaultSize} ${defaultSize}`}
			xmlns="http://www.w3.org/2000/svg"
			style="fill: currentColor"
			class={className}
			width={size | defaultSize}
			height={size | defaultSize}
			set:html={icon}
		/>
	) : (
		`NOT_FOUND_ICON ${name}`
	)
}
